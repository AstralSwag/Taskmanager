services:
  app:
    build: .
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=${REPLICATOR_USER}
      - DB_PASSWORD=${REPLICATOR_PASSWORD}
      - DB_NAME=replicator
      - DB_SSLMODE=disable
    volumes:
      - ./static:/app/static
      - ./templates:/app/templates
      - ./data:/app/data
    depends_on:
      - postgres
    restart: unless-stopped
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=traefik-net"
      - "traefik.http.routers.planfact.rule=Host(`planfact.astralswag.ru`)"
      - "traefik.http.routers.planfact.entrypoints=websecure"
      - "traefik.http.routers.planfact.tls=true"
      - "traefik.http.services.planfact.loadbalancer.server.port=8080"
      # Basic Auth middleware
      - "traefik.http.routers.planfact.middlewares=planfact-auth"
      - "traefik.http.middlewares.planfact-auth.basicauth.users=${HTTP_BASIC_AUTH}"
      - "traefik.http.middlewares.planfact-auth.basicauth.removeheader=true"
    networks:
      - traefik-net
      - app-network

  postgres:
    image: postgres:15
    environment:
      - POSTGRES_USER=${REPLICATOR_USER}
      - POSTGRES_PASSWORD=${REPLICATOR_PASSWORD}
      - POSTGRES_DB=replicator
      - PLANE_HOST=${PLANE_HOST}
      - PLANE_PORT=${PLANE_PORT}
      - REPLICA_PORT=${REPLICA_PORT}
      - REPLICATOR_USER=${REPLICATOR_USER}
      - REPLICATOR_PASSWORD=${REPLICATOR_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-replica.sh:/docker-entrypoint-initdb.d/00-init-replica.sh:ro
      - ./init-tables.sh:/docker-entrypoint-initdb.d/01-init-tables.sh:ro
      - ./subscribe.sh:/docker-entrypoint-initdb.d/02-subscribe.sh:ro
    ports:
      - "${REPLICA_PORT}:5432"
    restart: unless-stopped
    command: ["postgres", "-c", "max_connections=1000"]
    user: postgres
    networks:
      - app-network

volumes:
  postgres_data:
    driver: local

networks:
  traefik-net:
    external: true
  app-network:
    driver: bridge