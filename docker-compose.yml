services:
  app:
    build: .
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=${REPLICATOR_USER}
      - DB_PASSWORD=${REPLICATOR_PASSWORD}
      - DB_NAME=${REPLICATOR_DB}
      - DB_SSLMODE=disable
    volumes:
      - ./static:/app/static
      - ./templates:/app/templates
      - ./data:/app/data
    depends_on:
      - postgres
    restart: unless-stopped
    ports:
      - "8080:8080"
    networks:
      - app-network
      

  postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: ${REPLICATOR_USER}
      POSTGRES_PASSWORD: ${REPLICATOR_PASSWORD}
      POSTGRES_DB: ${REPLICATOR_DB}
      PLANE_HOST: ${PLANE_HOST}
      PLANE_PORT: ${PLANE_PORT}
      PLANE_DB: ${PLANE_DB}
      REPLICATOR_USER: ${REPLICATOR_USER}
      REPLICATOR_PASSWORD: ${REPLICATOR_PASSWORD}
    volumes:
      - ./init-scripts:/docker-entrypoint-initdb.d
      - /opt/planfact/Taskmanager/data/chain.pem:/etc/ssl/postgresql/root.crt
    command: postgres -c wal_level=logical
    extra_hosts:
      - "n8n.it4retail.tech:${PLANE_HOST}"
    restart: unless-stopped
    ports:
      - "${REPLICA_PORT}:5432"
    user: postgres
    networks:
      - app-network

networks:
  app-network:
    driver: bridge